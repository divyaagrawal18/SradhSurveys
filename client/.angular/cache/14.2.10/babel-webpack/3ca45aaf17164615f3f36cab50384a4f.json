{"ast":null,"code":"import { Answer } from 'src/app/model/survey.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/model/survey.repository\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/model/survey.model\";\nimport * as i4 from \"src/app/model/rest.datasource\";\nimport * as i5 from \"@angular/common\";\n\nfunction RespondSurveyComponent_div_1_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 8);\n    i0.ɵɵlistener(\"change\", function RespondSurveyComponent_div_1_div_7_div_1_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r8.onChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    const question_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", question_r1.qnumber)(\"value\", option_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r6, \" \");\n  }\n}\n\nfunction RespondSurveyComponent_div_1_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RespondSurveyComponent_div_1_div_7_div_1_Template, 3, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r1.choices);\n  }\n}\n\nfunction RespondSurveyComponent_div_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 9);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RespondSurveyComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"b\");\n    i0.ɵɵtext(5, \"Question Text: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵtemplate(7, RespondSurveyComponent_div_1_div_7_Template, 2, 1, \"div\", 6);\n    i0.ɵɵtemplate(8, RespondSurveyComponent_div_1_div_8_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i_r2 + 1, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", question_r1.qtext, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.qtype === \"mcq\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.qtype === \"text\");\n  }\n}\n\nexport let RespondSurveyComponent = /*#__PURE__*/(() => {\n  class RespondSurveyComponent {\n    constructor(repository, router, question, dataSource, activeRoute) {\n      this.repository = repository;\n      this.router = router;\n      this.question = question;\n      this.dataSource = dataSource;\n      this.activeRoute = activeRoute;\n      this.cursurveyquestions = [];\n      this.cursurveyanswers = [];\n    }\n\n    ngOnInit() {\n      // this.allquestions = this.getAllQuestions;\n      this.dataSource.getAllQuestions().subscribe(data => {\n        this.allquestions = data;\n        this.allquestions.forEach(x => x.checked = false);\n        this.dataSource.getSurveyQuestions().subscribe(data => {\n          this.allsurveys = data;\n          this.buildFormData();\n        });\n      });\n    }\n\n    buildFormData() {\n      debugger;\n      this.curSurvey = this.allsurveys.find(x => x._id === this.activeRoute.snapshot.params.id);\n\n      for (let i = 0; i < this.curSurvey.questions.length; i++) {\n        this.cursurveyquestions.push(this.allquestions.find(q => q.qnumber === this.curSurvey.questions[i]));\n      }\n    }\n\n    get surveyQuestions() {\n      var result = this.repository.getSurveyQuestions(); // var result2 = result.filter(x=> x._id == \"6371504b69ed3b157cb659b8\")[0];\n      // console.log(result2);\n\n      return result[3]; // return this.repository\n      //   .getSurveyQuestions()[0];\n    }\n\n    get getAllQuestions() {\n      let questions = this.repository.getAllQuestions();\n      return questions;\n    }\n\n    submitSurvey() {\n      if (confirm(\"Are you sure to submit survey?\")) {\n        //Adding survey response\n        debugger;\n        let sampleSurveyResponse = {\n          surveyId: this.curSurvey._id,\n          answers: this.cursurveyanswers //  answers: [\n          //   {\n          //     qnumber: 101123,\n          //     answer: \"TV\"\n          //   },\n          //   {\n          //     qnumber: 101123,\n          //     answer: \"TV\"\n          //   }\n          //  ]\n\n        };\n        debugger;\n        this.repository.saveSurveyResponse(sampleSurveyResponse).subscribe(order => {\n          debugger;\n        });\n        this.router.navigateByUrl('/survey-list');\n      }\n    }\n\n    cancel() {\n      this.router.navigateByUrl('/survey-list');\n    }\n\n    onChange(e) {\n      debugger;\n      console.log(e.target.value);\n      let filteredAnswer = this.cursurveyanswers.find(a => a.qnumber == e.target.name);\n\n      if (filteredAnswer !== undefined) {\n        const index = this.cursurveyanswers.indexOf(filteredAnswer);\n\n        if (index > -1) {\n          this.cursurveyanswers.splice(index, 1);\n        }\n      }\n\n      let answer = new Answer();\n      answer.qnumber = e.target.name;\n      answer.answer = e.target.value;\n      this.cursurveyanswers.push(answer);\n    }\n\n  }\n\n  RespondSurveyComponent.ɵfac = function RespondSurveyComponent_Factory(t) {\n    return new (t || RespondSurveyComponent)(i0.ɵɵdirectiveInject(i1.SurveyRepository), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Question), i0.ɵɵdirectiveInject(i4.RestDataSource), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  RespondSurveyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RespondSurveyComponent,\n    selectors: [[\"app-respond-survey\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[2, \"margin\", \"5%\", \"font-size\", \"20px\"], [\"class\", \"card m-1 p-1 bg-light\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 2, \"font-size\", \"25px\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 2, \"font-size\", \"25px\", 3, \"click\"], [1, \"card\", \"m-1\", \"p-1\", \"bg-light\"], [1, \"card-text\", \"bg-white\", \"p-1\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"change\"], [\"type\", \"text\", \"name\", \"txtAnswer\"]],\n    template: function RespondSurveyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, RespondSurveyComponent_div_1_Template, 9, 4, \"div\", 1);\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function RespondSurveyComponent_Template_button_click_3_listener() {\n          return ctx.submitSurvey();\n        });\n        i0.ɵɵtext(4, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function RespondSurveyComponent_Template_button_click_6_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(7, \"Cancel\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cursurveyquestions);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf]\n  });\n  return RespondSurveyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}