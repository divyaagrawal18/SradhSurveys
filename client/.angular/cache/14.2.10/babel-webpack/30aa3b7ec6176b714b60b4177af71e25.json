{"ast":null,"code":"import { Question, Survey } from '../../model/survey.model';\nimport { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/model/survey.repository\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../model/survey.model\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/model/rest.datasource\";\nimport * as i6 from \"@angular/forms\";\n\nfunction CreateSurveyComponent_div_10_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const question_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Option \", i_r6 + 1, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", question_r1.qnumber, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5, \" \");\n  }\n}\n\nfunction CreateSurveyComponent_div_10_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CreateSurveyComponent_div_10_div_11_div_1_Template, 6, 3, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const question_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r1.choices);\n  }\n}\n\nfunction CreateSurveyComponent_div_10_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateSurveyComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\")(2, \"span\")(3, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function CreateSurveyComponent_div_10_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const question_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(question_r1.checked = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" \\u00A0\");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6, \" Select this Question as part of the survey \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"b\");\n    i0.ɵɵtext(9, \"Question Text: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵtemplate(11, CreateSurveyComponent_div_10_div_11_Template, 2, 1, \"div\", 12);\n    i0.ɵɵtemplate(12, CreateSurveyComponent_div_10_div_12_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", question_r1.checked);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", question_r1.qtext, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.qtype === \"mcq\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r1.qtype === \"text\");\n  }\n}\n\nexport let CreateSurveyComponent = /*#__PURE__*/(() => {\n  class CreateSurveyComponent {\n    constructor(repository, router, question, datepipe, dataSource) {\n      this.repository = repository;\n      this.router = router;\n      this.question = question;\n      this.datepipe = datepipe;\n      this.dataSource = dataSource;\n    }\n\n    ngOnInit() {\n      // this.allquestions = this.getAllQuestions;\n      this.dataSource.getAllQuestions().subscribe(data => {\n        this.allquestions = data;\n      });\n      this.allquestions.forEach(x => x.checked = false);\n    }\n\n    get surveyQuestions() {\n      var result = this.repository.getSurveyQuestions(); // var result2 = result.filter(x=> x._id == \"6371504b69ed3b157cb659b8\")[0];\n      // console.log(result2);\n\n      return result[3]; // return this.repository\n      //   .getSurveyQuestions()[0];\n    }\n\n    get getAllQuestions() {\n      let questions = this.repository.getAllQuestions();\n      return questions;\n    }\n\n    submitSurvey() {\n      if (confirm(\"Are you sure?\")) {\n        // //Adding question\n        // let sampleQuestion: Question = {\n        //   qnumber: 2,\n        //   qtype: \"mcq\",\n        //   qtext: \"Which product you purchased 2?\",\n        //   choices: [\"TV2\",\"Fridge2\"]\n        // };\n        // this.repository.saveQuestion(sampleQuestion).subscribe(order => {\n        //  debugger\n        // });\n        //  //Adding survey\n        //Adding survey - dynamic\n        let selectedQuestionNumbers = [];\n        let selectedQuestions = this.allquestions.filter(x => x.checked == true);\n\n        for (let i = 0; i < selectedQuestions.length; i++) {\n          selectedQuestionNumbers.push(selectedQuestions[i].qnumber);\n        }\n\n        let sampleSurvey = {\n          _id: \"0\",\n          title: this.surveytitle,\n          // expires:  \"2022-11-30\",\n          startdate: this.datepipe.transform(this.startDate, 'yyyy-MM-dd'),\n          enddate: this.datepipe.transform(this.endDate, 'yyyy-MM-dd'),\n          questions: selectedQuestionNumbers\n        };\n        debugger;\n        this.repository.saveSurvey(sampleSurvey).subscribe(order => {\n          this.router.navigateByUrl('/admin/main/all-surveys');\n        }); //end of adding survey - dynamic code\n        //Adding survey response\n        //   let date = new Date(2022);\n        //   let sampleSurveyResponse: SurveyResponse = {\n        //    surveyId: \"6370742a427f881f0f24c57c\",\n        //    answers: [\n        //     {\n        //       qnumber: 101123,\n        //       answer: \"TV\"\n        //     },\n        //     {\n        //       qnumber: 101123,\n        //       answer: \"TV\"\n        //     }\n        //    ]\n        //  };\n        //  debugger\n        //  this.repository.saveSurveyResponse(sampleSurveyResponse).subscribe(order => {\n        //   debugger\n        //  });\n      }\n    }\n\n    cancel() {\n      this.router.navigateByUrl('/admin/main/all-surveys');\n    }\n\n  }\n\n  CreateSurveyComponent.ɵfac = function CreateSurveyComponent_Factory(t) {\n    return new (t || CreateSurveyComponent)(i0.ɵɵdirectiveInject(i1.SurveyRepository), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Question), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.RestDataSource));\n  };\n\n  CreateSurveyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateSurveyComponent,\n    selectors: [[\"app-create-survey\"]],\n    features: [i0.ɵɵProvidersFeature([DatePipe])],\n    decls: 17,\n    vars: 4,\n    consts: [[2, \"margin\", \"5%\", \"font-size\", \"20px\"], [\"for\", \"startdate\"], [\"type\", \"text\", \"id\", \"surveytitle\", \"name\", \"surveytitle\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"id\", \"startdate\", \"name\", \"startdate\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"enddate\"], [\"type\", \"date\", \"id\", \"enddate\", \"name\", \"enddate\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"card m-1 p-1 bg-light\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 2, \"font-size\", \"25px\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 2, \"font-size\", \"25px\", 3, \"click\"], [1, \"card\", \"m-1\", \"p-1\", \"bg-light\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [1, \"card-text\", \"bg-white\", \"p-1\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"name\", \"txtAnswer\"]],\n    template: function CreateSurveyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Survey Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateSurveyComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.surveytitle = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Start Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateSurveyComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.startDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 4);\n        i0.ɵɵtext(8, \"End Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateSurveyComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.endDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, CreateSurveyComponent_div_10_Template, 13, 4, \"div\", 6);\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateSurveyComponent_Template_button_click_12_listener() {\n          return ctx.submitSurvey();\n        });\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \" \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(15, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CreateSurveyComponent_Template_button_click_15_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(16, \"Cancel\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.surveytitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allquestions);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.NgControlStatus, i6.NgModel]\n  });\n  return CreateSurveyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}